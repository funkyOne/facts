{"version":3,"sources":["facts/facts.js"],"names":[],"mappings":";;;;;;IAAM,SAAS;AACA,aADT,SAAS,CACC,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE;8BADhE,SAAS;;AAEP,YAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,YAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,YAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACjC,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;AAEjB,YAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;iBAVC,SAAS;;eAYK,4BAAE;AACd,gBAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;SAC7C;;;eAEK,iBAAC,IAAI,EAAE,QAAQ,EAAE;AACnB,gBAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACtC,gBAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;;;eAES,oBAAC,IAAI,EAAE;AACb,gBAAI,IAAI,CAAC,MAAM,EAAE;AACb,uBAAO;aACV;;AAED,gBAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,OAAO,CAAC,UAAC,MAAM,EAAI;AAC/D,oBAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACxB,CAAC,CAAA;SACL;;;eAEU,qBAAC,IAAI,EAAC;AACb,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC1D;;;eAEO,mBAAG;;;AACP,gBAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACjC,2BAAW,EAAE,sBAAsB;AACnC,0BAAU,EAAE,aAAa;AACzB,uBAAO,EAAE,CAAC,OAAO,CAAC;aACrB,CAAC,CAAC;;AAEH,yBAAa,CAAC,MAAM,CAAC,IAAI,CAAC,YAAK;AAC3B,sBAAK,gBAAgB,EAAE,CAAC;aAC3B,CAAC,CAAC;SACN;;;eAEI,cAAC,IAAI,EAAE;;;AACR,gBAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AACnC,iBAAK,CAAC,IAAI,GAAG,IAAI,CAAC;;AAElB,gBAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACjC,2BAAW,EAAE,uBAAuB;AACpC,0BAAU,EAAE,cAAc;AAC1B,uBAAO,EAAE,CAAC,OAAO,CAAC;AAClB,qBAAK,EAAE,KAAK;AACZ,oBAAI,EAAE,IAAI;aACb,CAAC,CAAC;;AAEH,yBAAa,CAAC,MAAM,CAAC,IAAI,CAAC,YAAK;AAC3B,uBAAK,gBAAgB,EAAE,CAAC;aAC3B,CAAC,CAAC;SACN;;;eAEI,cAAC,IAAI,EAAC;AACP,gBAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,gBAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC3B;;;WAnEC,SAAS;;;AAqEf,SAAS,CAAC,OAAO,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;AACvF,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC","file":"facts/facts.js","sourcesContent":["class FactsCtrl {\r\n    constructor(Facts, $modal, $rootScope, $http, $sceDelegate, $sce) {\r\n        this.Facts = Facts;\r\n        this.$modal = $modal;\r\n        this.$rootScope = $rootScope;\r\n        this.$http = $http;\r\n        this.$sceDelegate = $sceDelegate;\r\n        this.$sce = $sce;\r\n\r\n        this.updateCategories();\r\n    }\r\n\r\n    updateCategories(){\r\n        this.categories = this.Facts.categories();\r\n    }\r\n\r\n    delete(fact, category) {\r\n        this.Facts.deleteFact(fact, category);\r\n        this.updateCategories();\r\n    }\r\n\r\n    getDetails(fact) {\r\n        if (fact.issues) {\r\n            return;\r\n        }\r\n\r\n        this.$http.get(\"/facts/\" + fact.id + \"/issues\").success((issues)=> {\r\n            fact.issues = issues;\r\n        })\r\n    }\r\n\r\n    makeTrusted(html){\r\n        return this.$sceDelegate.trustAs(this.$sce.HTML, html);\r\n    }\r\n\r\n    addFact () {\r\n        var modalInstance = this.$modal.open({\r\n            templateUrl: '/facts/add-fact.html',\r\n            controller: 'AddFactCtrl',\r\n            resolve: [\"Facts\"]\r\n        });\r\n\r\n        modalInstance.result.then(()=> {\r\n            this.updateCategories();\r\n        });\r\n    };\r\n\r\n    edit (fact) {\r\n        var scope = this.$rootScope.$new();\r\n        scope.fact = fact;\r\n\r\n        var modalInstance = this.$modal.open({\r\n            templateUrl: '/facts/edit-fact.html',\r\n            controller: 'EditFactCtrl',\r\n            resolve: [\"Facts\"],\r\n            scope: scope,\r\n            size: \"lg\"\r\n        });\r\n\r\n        modalInstance.result.then(()=> {\r\n            this.updateCategories();\r\n        });\r\n    };\r\n\r\n    hide (fact){\r\n        fact.hidden = true;\r\n        this.Facts.update(fact);\r\n    }\r\n}\r\nFactsCtrl.$inject = [\"Facts\", \"$modal\", \"$rootScope\", \"$http\", \"$sceDelegate\", \"$sce\"];\r\nangular.module(\"p7\").controller(\"FactsCtrl\", FactsCtrl);"],"sourceRoot":"/source/"}